package Chapter2;

import java.util.ArrayList;

public class task6 {

	public static void main(String[] args) {

		// 6.次の変数宣言のうち、コンパイルエラーとならないものを選びなさい。（1つ選択）
		// var a;                   変数が初期化されていない
		// var b = null;          データ型を推定できない
		// var c = () -> ();    ラムダ式だけではその式を扱う編スンの型を推論できない
		// var d = {1, 2, 3};  何型の配列インスタンスを生成すればよいのかを判断できない
		var e = new ArrayList<>();

		/* 解説
		 * Java SE 10より、変数宣言時のデータ型を推論する機能（ローカル変数の型推論）が追加された
		 * 型推論を行うためには、次のようにデータ型の代わりにvarを使って変数を宣言する。
		 * varを使った型推論は、コンパイル時にコンパイラが代入演算子「=」の右辺から変数のデータ型を推論し、そのデータ型に置き換える機能。
		 * 変数が初期化されていなかったり、nullで初期化したりするなど、データ型を推定できない場合はコンパイルエラーとなる。
		 */
	}
}
